# Set 256 color terminal
set -g default-terminal 'screen-256color'

# set Window indexing to 1 (only because 1 is first on the keyboard)
set -g base-index 1

# Set prefix to ctrl+Space
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

# Reload config with a key
bind-key r source-file ~/.tmux.conf \; display "Config reloaded!"

# Theoretically make copy paste work in vim
set-option -g default-command "reattach-to-user-namespace -l fish"

# Mouse works as expected
set-option -g mouse on

# Scrolling works
#bind -n WheelUpPane if-shell -F -T = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -T=; copy-mode-vi -e; send-keys -M'"  
#bind -n WheelDownPane select-pane -T= \; send-keys -M 

# vi is good
setw -g mode-keys vi

# Scrolling works as expected
#set -g terminal-overrides 'xterm*:smcup@:rmcup@'

set-option -g history-limit 10000


# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-selection
bind-key -T copy-mode-vi 'r' send-keys -X rectangle-Toggle

## Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter  send-keys -X copy-pipe 'reattach-To-user-namespace pbcopy'

# Status bar
set-option -g status-bg colour237
set-option -g status-fg colour252

# Window titles
set-window-option -g window-status-fg colour252
set-window-option -g window-status-bg default
set-window-option -g window-status-attr dim

# Active window title
set-window-option -g window-status-current-fg colour135
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr bright

# Pane border
set-option -g pane-border-fg colour242
set-option -g pane-active-border-fg colour148

# Message text
set-option -g message-bg colour234
set-option -g message-fg colour252

# Make escape snappy
set-option -sg escape-time 10

# Make splits use the same path as the current pane
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
